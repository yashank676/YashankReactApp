{"version":3,"sources":["context/index.js","components/stage_1.js","components/stage_2.js","App.js","index.js"],"names":["MyContext","React","createContext","MyProvider","state","stage","players","result","addPlayer","name","setState","prevState","removePlayer","index","newArr","splice","next","length","toast","error","position","POSITION","TOP_LEFT","autoClose","setTimeout","getLooser","Math","floor","random","resetGame","Provider","value","this","getNewLooser","props","children","Component","Stage1","texInput","useRef","useState","setError","context","useContext","console","log","validateInput","Form","onSubmit","eventArg","preventDefault","inputValue","current","className","Group","Control","type","placeholder","ref","Alert","variant","Button","map","item","onClick","Stage2","App","contextType","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fb640fb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nconst MyContext = React.createContext();\r\n\r\nclass MyProvider extends React.Component{\r\n\r\n    state = {\r\n        stage: 1,\r\n        players: [],\r\n        result: \"\"\r\n    };\r\n\r\n    addPlayer = (name)=>{\r\n        this.setState((prevState)=>({\r\n            players: [\r\n                ...prevState.players,\r\n                name\r\n            ]\r\n        }))\r\n    }\r\n\r\n    removePlayer = (index)=>{\r\n        let newArr = this.state.players;\r\n        newArr.splice(index,1);\r\n        this.setState({players: newArr});\r\n    }\r\n\r\n    next = ()=>{\r\n        if(this.state.players.length<2)\r\n        {\r\n            toast.error(\"You need more than one player\",{\r\n                position: toast.POSITION.TOP_LEFT,\r\n                autoClose: 2000\r\n            })\r\n        }\r\n        else{\r\n            // console.log(\"show stage 2\");\r\n            this.setState({\r\n                stage: 2\r\n            },()=>{\r\n                setTimeout(()=>{\r\n                    this.getLooser();\r\n                },2000);\r\n            });\r\n        }\r\n    }\r\n\r\n    getLooser = ()=>{\r\n        this.setState({\r\n            result: this.state.players[Math.floor(Math.random() * this.state.players.length)]\r\n        })\r\n    };\r\n\r\n    resetGame = ()=>{\r\n        this.setState({\r\n            stage: 1,\r\n            players: [],\r\n            result: \"\"\r\n        })\r\n    };\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <>\r\n            <MyContext.Provider value={{\r\n                state: this.state,\r\n                addPlayer: this.addPlayer,\r\n                removePlayer: this.removePlayer,\r\n                next: this.next,\r\n                getNewLooser: this.getLooser,\r\n                resetGame: this.resetGame\r\n            }}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n            <ToastContainer/>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport {MyContext,MyProvider};","import React, { useState, useContext, useRef } from \"react\";\r\nimport { Button, Form, Alert } from \"react-bootstrap\";\r\n\r\nimport { MyContext } from \"../context\";\r\n\r\n\r\nconst Stage1=()=>{\r\n\r\n    const texInput = useRef();// to access input in the inputfield\r\n    const [error,setError] = useState([false,\"\"]);// to handle error in the input\r\n    const context = useContext(MyContext);\r\n\r\n    console.log(context.state.players)\r\n\r\n    const handleSubmit = (eventArg)=>{\r\n        eventArg.preventDefault();// to prevent reload on submit\r\n        const inputValue = texInput.current.value;\r\n        const isValid = validateInput(inputValue);\r\n        if(isValid)\r\n        {\r\n            // we need to add player to the list and empty the input\r\n            console.log(inputValue);\r\n            context.addPlayer(inputValue);\r\n\r\n            texInput.current.value = \"\";\r\n        }\r\n    };\r\n\r\n    const validateInput = (value)=>{\r\n        if(value===\"\")\r\n        {\r\n            setError([true,\"Please Add Something\"]);\r\n            return false;\r\n        }\r\n        if(value.length <= 2)\r\n        {\r\n            setError([true,\"Enter name of length atleast 3\"]);\r\n            return false;\r\n        }\r\n        setError([false,\"\"]);\r\n        return true;\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Form onSubmit={handleSubmit} className=\"mt-3\">\r\n            \r\n            <Form.Group>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Add player name\"\r\n                  name=\"player\"\r\n                  ref={texInput}\r\n                />\r\n            </Form.Group>\r\n            \r\n            {\r\n                error[0]?\r\n                <Alert variant=\"danger\">\r\n                    {error[1]}\r\n                </Alert>\r\n                :\r\n                null\r\n            }\r\n\r\n            <Button className=\"mt-3\" variant=\"outline-primary\" type=\"submit\">\r\n            Add Player\r\n            </Button>\r\n\r\n            {\r\n                context.state.players.length>0 ? \r\n                <>\r\n                    <hr/>\r\n                    <div>\r\n                        <ul className=\"list-group\">\r\n                            {\r\n                                context.state.players.map((item,index)=>{\r\n                                    return (\r\n                                        <li key={index} className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-center\">\r\n                                            {item}\r\n                                            <span className=\"badge badge-danger\" onClick={() => context.removePlayer(index)}>x</span>\r\n                                        </li>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <div className=\"action_button\" onClick={() => context.next()}>\r\n                            NEXT\r\n                        </div>\r\n                    </div>\r\n                </>\r\n                :\r\n                null\r\n            }\r\n        \r\n        </Form>\r\n  \r\n      </>\r\n    );\r\n}\r\n\r\nexport default Stage1;\r\n","import React,{ useContext } from \"react\";\r\nimport Stage1 from \"./stage_1\";\r\n\r\nimport { MyContext } from \"../context\";\r\n\r\nconst Stage2=()=>{\r\n\r\n  const context = useContext(MyContext);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"result_wrapper\">\r\n        <h3>The losser is:</h3>\r\n        <div>{context.state.result}</div>\r\n      </div>\r\n      <div className=\"action_button\" onClick={context.resetGame}>\r\n        Start Over\r\n      </div>\r\n      <div className=\"action_button btn_2\" onClick={context.getNewLooser}>\r\n        Get New Looser\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Stage2;\r\n","import React from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\"\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Stage1 from \"./components/stage_1\";\nimport Stage2 from \"./components/stage_2\";\nimport { MyContext } from \"./context\"\n\n\nclass App extends React.Component{\n  \n  static contextType = MyContext;\n  \n  render()\n  {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"center-wrapper\">\n          <h1>Who Pays the bill ?</h1>\n          {\n            this.context.state.stage === 1 ?\n            <Stage1/>\n            :\n            <Stage2/>\n          }\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport { MyProvider } from './context';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <MyProvider>\n    <App />  \n  </MyProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}